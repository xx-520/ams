<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qfedu.ams.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.qfedu.ams.entity.Admin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="menuMap" type="com.qfedu.ams.vo.Pmenu">
    <id column="pid" property="pid"></id>
    <result column="pmenu" property="pmenu"></result>
    <result column="resource_type" property="resourceType"></result>
    <result column="url"></result>
    <collection property="cmenu" javaType="list" ofType="com.qfedu.ams.vo.Cmenu">
      <id column="cpid" property="cpid"></id>
      <result column="cmenu" property="cmenu"></result>
      <result column="cpermision_name" property="cpermisionName"></result>
      <result column="cresource_type" property="cresourceType"></result>
      <result column="curl" property="curl"></result>
    </collection>
  </resultMap>
  <resultMap id="adminMap" type="com.qfedu.ams.vo.VoAdmin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
    <association property="role" javaType="com.qfedu.ams.entity.Role">
      <result column="role" property="role"></result>
    </association>
  </resultMap>


  <!--<sql id="Base_Column_List" >
    id, username, password, roleId
  </sql>-->


  <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>-->


  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>-->


  <!--<insert id="insert" parameterType="com.qfedu.ams.entity.Admin" >
    insert into admin (id, username, password,
      roleId)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{roleid,jdbcType=INTEGER})
  </insert>-->


  <!--<update id="updateByPrimaryKey" parameterType="com.qfedu.ams.entity.Admin" >
    update admin
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      roleId = #{roleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>-->

  <select id="findByName" parameterType="string" resultType="admin">
    select * from admin where username=#{username}
  </select>

  <select id="findRolesByName" parameterType="string" resultType="string">
    select r.role from admin a
    inner join a_user_role ur on a.id = ur.uid
    inner join a_role r on r.id = ur.rid where a.username=#{username};
  </select>

  <select id="findPermsByName" parameterType="string" resultType="string">
    select DISTINCT p.permision_name from admin a
    inner join a_user_role ur on ur.uid = a.id
    inner join a_role_permision rp on rp.rid = ur.rid
    inner join a_permision p on p.pid = rp.pid
    where p.permision_name is not null and a.username = #{username}
  </select>

  <select id="findMenu" parameterType="string" resultMap="menuMap">
    select p.pid,p.resource_name pmenu,p.resource_type,p.url,c.pid cpid,
    c.resource_name cmenu,c.permision_name cpermision_name,
    c.resource_type cresource_type,c.url curl from a_permision p
    inner join a_permision c on p.pid = c.parent_id inner join a_role_permision rp
    on c.pid=rp.pid inner join a_user_role ur on ur.rid = rp.rid inner join admin a on a.id=ur.uid where
    a.username = #{username} and c.resource_type = 'menu'
  </select>

  <select id="findAdmin" parameterType="string" resultMap="adminMap">
    select a.*,r.role from admin a inner join a_role r on a.roleId = r.id
    <where>
      <if test="username != null and !username.equals('')">
        username like concat('%', #{username}, '%')
      </if>
      and a.status = 1
    </where>
  </select>

  <insert id="addAdmin" parameterType="admin">
      insert into admin(username, password, roleId) values (#{username}, #{password}, #{roleid})
  </insert>

  <update id="deleteOne" parameterType="int">
    update admin set status = 0 where id = #{id}
  </update>

  <update id="deleteMany" parameterType="map">
      update admin set status = 0 where id in
      <foreach collection="array" item="ids" open="(" separator="," close=")">
          #{ids}
      </foreach>
  </update>

</mapper>
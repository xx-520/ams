<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qfedu.ams.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.qfedu.ams.entity.Admin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
  </resultMap>


  <!--<sql id="Base_Column_List" >
    id, username, password, roleId
  </sql>-->


  <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>-->


  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>-->


  <!--<insert id="insert" parameterType="com.qfedu.ams.entity.Admin" >
    insert into admin (id, username, password,
      roleId)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{roleid,jdbcType=INTEGER})
  </insert>-->


  <!--<update id="updateByPrimaryKey" parameterType="com.qfedu.ams.entity.Admin" >
    update admin
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      roleId = #{roleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>-->

  <select id="findByName" parameterType="string" resultType="admin">
    select * from admin where username=#{username}
  </select>
  
  <select id="findRolesByName" parameterType="string" resultType="string">
    select r.role from admin a
    inner join a_role ar
    on a.roleId = ar.id
    where a.username=#{username}
  </select>
  
  <select id="findPermsByName" parameterType="string" resultType="string">
    select p.permision_name from admin a
    inner join a_role ar
    on a.roleId=ar.id
    inner join a_role_permision rp
    on rp.rid=ar.id
    inner join a_permision ap
    on rp.pid=ap.pid
    where ap.permision_name is not null and a.username=#{username}
  </select>

</mapper>